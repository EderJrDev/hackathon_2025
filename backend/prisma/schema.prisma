generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(cuid())
  username  String   @unique
  password  String
  role      String   @default("USER")

  @@map("users")
}
model ChatSession {
  id         String    @id @default(cuid())
  name       String?
  dob        DateTime?  // data de nascimento
  createdAt  DateTime  @default(now())
  updatedAt  DateTime  @updatedAt
  messages   Message[]
}

model Message {
  id         String       @id @default(cuid())
  sessionId  String
  session    ChatSession  @relation(fields: [sessionId], references: [id], onDelete: Cascade)
  role       String       // 'user' | 'assistant' | 'system'
  content    String
  createdAt  DateTime     @default(now())

  @@index([sessionId, createdAt])
}

model Doctor {
  id           String        @id @default(cuid())
  name         String
  crm          String        @unique
  city         String
  specialtyId  String
  createdAt    DateTime      @default(now())
  updatedAt    DateTime      @updatedAt

  availability Availability[]
  appointments Appointment[]

  @@map("doctors")
}

model Availability {
  id        String    @id @default(cuid())
  doctorId  String
  date      DateTime
  isActive  Boolean   @default(true)
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt

  doctor    Doctor    @relation(fields: [doctorId], references: [id])

  @@map("availabilities")
}

model Appointment {
  id          String            @id @default(cuid())
  protocol    String            @unique @default(cuid())
  doctorId    String
  doctor      Doctor            @relation(fields: [doctorId], references: [id])
  patientName String
  patientBirth DateTime
  date        DateTime
  status      AppointmentStatus @default(SCHEDULED)
  createdAt   DateTime          @default(now())
  updatedAt   DateTime          @updatedAt

  @@map("appointments")
}

enum AppointmentStatus {
  SCHEDULED
  CONFIRMED
  CANCELLED
  COMPLETED
  NO_SHOW
}
